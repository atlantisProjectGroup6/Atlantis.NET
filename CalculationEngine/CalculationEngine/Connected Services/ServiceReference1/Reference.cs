//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculationEngine.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculatedMetrics", Namespace="http://schemas.datacontract.org/2004/07/CalculationService")]
    [System.SerializableAttribute()]
    public partial class CalculatedMetrics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float dayAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deviceMACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CalculationEngine.ServiceReference1.ObjectId idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float monthAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float weekAvgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float dayAvg {
            get {
                return this.dayAvgField;
            }
            set {
                if ((this.dayAvgField.Equals(value) != true)) {
                    this.dayAvgField = value;
                    this.RaisePropertyChanged("dayAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deviceMAC {
            get {
                return this.deviceMACField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceMACField, value) != true)) {
                    this.deviceMACField = value;
                    this.RaisePropertyChanged("deviceMAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CalculationEngine.ServiceReference1.ObjectId id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float monthAvg {
            get {
                return this.monthAvgField;
            }
            set {
                if ((this.monthAvgField.Equals(value) != true)) {
                    this.monthAvgField = value;
                    this.RaisePropertyChanged("monthAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float weekAvg {
            get {
                return this.weekAvgField;
            }
            set {
                if ((this.weekAvgField.Equals(value) != true)) {
                    this.weekAvgField = value;
                    this.RaisePropertyChanged("weekAvg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectId", Namespace="http://schemas.datacontract.org/2004/07/MongoDB.Bson")]
    [System.SerializableAttribute()]
    public partial struct ObjectId : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _aField;
        
        private int _bField;
        
        private int _cField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _a {
            get {
                return this._aField;
            }
            set {
                if ((this._aField.Equals(value) != true)) {
                    this._aField = value;
                    this.RaisePropertyChanged("_a");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _b {
            get {
                return this._bField;
            }
            set {
                if ((this._bField.Equals(value) != true)) {
                    this._bField = value;
                    this.RaisePropertyChanged("_b");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _c {
            get {
                return this._cField;
            }
            set {
                if ((this._cField.Equals(value) != true)) {
                    this._cField = value;
                    this.RaisePropertyChanged("_c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.CalculationEndpoint")]
    public interface CalculationEndpoint {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculationEndpoint/InsertMetrics", ReplyAction="http://tempuri.org/CalculationEndpoint/InsertMetricsResponse")]
        void InsertMetrics(CalculationEngine.ServiceReference1.CalculatedMetrics metrics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculationEndpoint/InsertMetrics", ReplyAction="http://tempuri.org/CalculationEndpoint/InsertMetricsResponse")]
        System.Threading.Tasks.Task InsertMetricsAsync(CalculationEngine.ServiceReference1.CalculatedMetrics metrics);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculationEndpoint/updateAverage", ReplyAction="http://tempuri.org/CalculationEndpoint/updateAverageResponse")]
        string updateAverage(string id, float value, int nbValueDay, int nbValueWeek, int nbValueMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CalculationEndpoint/updateAverage", ReplyAction="http://tempuri.org/CalculationEndpoint/updateAverageResponse")]
        System.Threading.Tasks.Task<string> updateAverageAsync(string id, float value, int nbValueDay, int nbValueWeek, int nbValueMonth);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalculationEndpointChannel : CalculationEngine.ServiceReference1.CalculationEndpoint, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculationEndpointClient : System.ServiceModel.ClientBase<CalculationEngine.ServiceReference1.CalculationEndpoint>, CalculationEngine.ServiceReference1.CalculationEndpoint {
        
        public CalculationEndpointClient() {
        }
        
        public CalculationEndpointClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculationEndpointClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationEndpointClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculationEndpointClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertMetrics(CalculationEngine.ServiceReference1.CalculatedMetrics metrics) {
            base.Channel.InsertMetrics(metrics);
        }
        
        public System.Threading.Tasks.Task InsertMetricsAsync(CalculationEngine.ServiceReference1.CalculatedMetrics metrics) {
            return base.Channel.InsertMetricsAsync(metrics);
        }
        
        public string updateAverage(string id, float value, int nbValueDay, int nbValueWeek, int nbValueMonth) {
            return base.Channel.updateAverage(id, value, nbValueDay, nbValueWeek, nbValueMonth);
        }
        
        public System.Threading.Tasks.Task<string> updateAverageAsync(string id, float value, int nbValueDay, int nbValueWeek, int nbValueMonth) {
            return base.Channel.updateAverageAsync(id, value, nbValueDay, nbValueWeek, nbValueMonth);
        }
    }
}
